<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sv">

	<select id="svList" parameterType="hashMap" resultType="hashMap">
		SELECT SERVICENO,SERVICENAME,SERVICENAME_,SERVICECHANNEL_,CUSTNAME_
		,CLINAME_,RECEPTIONDATE_,SERVICEOWNER_,OWNER_,SERVICESTEP_,SERVICETYPE_
		,IF(LENGTH(SERVICECODE_) <![CDATA[<]]> 4,REPLACE(SERVICECODE_,'/',''),SERVICECODE_) AS SERVICECODE_
		,RECFILENAME,RECDATE_,RECEXT,REQNO
		 FROM (
			SELECT
			A.SERVICENO 
		 	, A.SERVICENAME 
		 	,CASE WHEN CHAR_LENGTH(A.SERVICENAME) <![CDATA[>=]]> 20 THEN CONCAT( SUBSTRING(A.SERVICENAME,1,17) ,'...' )  ELSE IFNULL(A.SERVICENAME,'') END AS SERVICENAME_
	    					, CONCAT(IF(A.SERVICECODE1=0,'',FN_GETCODE('SERVICECODE1',A.SERVICECODE1,#{siteid})),' / ',IF(A.SERVICECODE2=0,'',FN_GETCODEUPPER('SERVICECODE2',A.SERVICECODE2,#{siteid},FN_GETCODENO('SERVICECODE1',A.SERVICECODE1,#{siteid})))) AS SERVICECODE_
			, FN_GETCODE('SERVICECHANNEL',A.SERVICECHANNEL,1) AS SERVICECHANNEL_
			, (SELECT CUSTNAME FROM cu100010 WHERE CUSTNO = A.CUSTNO) AS CUSTNAME_
			, (SELECT CLINAME FROM sa200010 WHERE CLINO = A.CLINO) AS CLINAME_
			, DATE_FORMAT(A.RECEPTIONDATE,'%Y-%m-%d') AS RECEPTIONDATE_
			, (SELECT USERNAME FROM me800010 WHERE USERNO = A.SERVICEOWNER) AS SERVICEOWNER_
			, IFNULL( (SELECT USERNAME FROM me800010 WHERE USERNO = A.OWNER) ,'') AS OWNER_ 
			, FN_GETCODE('SERVICESTEP',A.SERVICESTEP,1) AS SERVICESTEP_
			, FN_GETCODE('SERVICETYPE',A.SERVICETYPE,1) AS SERVICETYPE_
			,B.RECDATE, B.RECEXT, B.RECFILENAME, A.REQNO
			,REPLACE(B.RECDATE,'-','') AS RECDATE_
			, @RNUM:=@RNUM + 1 AS ROWNUM
			FROM sv300010 A
			LEFT OUTER JOIN cti510030 B ON A.REQNO = B.REQNO
			,(SELECT @RNUM := 0) R
			WHERE A.ISDELETE = 0
			AND A.SITEID = #{siteid}
			<if test="strDate != null">
				AND A.RECEPTIONDATE <![CDATA[>=]]> #{strDate}
			</if>
			<if test="endDate != null">
				AND A.RECEPTIONDATE <![CDATA[<=]]> #{endDate}
			</if>
			<if test="custno != null">
				AND A.CUSTNO = #{custno}
			</if>
			<if test="servicename != null">
				AND A.SERVICENAME LIKE CONCAT('%' , #{servicename} , '%')
			</if>
			<if test="servicetype != null">
				AND A.SERVICETYPE = #{servicetype}
			</if>
			<if test="clino != null">
				AND A.CLINO = #{clino}
			</if>
			<if test="servicecode1 != null">
				AND A.SERVICECODE1 = #{servicecode1}
			</if>
			<if test="servicecode2 != null">
				AND A.SERVICECODE2 = #{servicecode2}
			</if>
			<if test="serviceowner != null">
				AND A.SERVICEOWNER = #{serviceowner}
			</if>
			<if test="owner != null">
				AND A.OWNER = #{owner}
			</if>
			<if test="servicestep != null">
				AND A.SERVICESTEP = #{servicestep}
			</if>
    		 ) X
    		 <if test="endRowNum != null">
				WHERE X.ROWNUM Between #{startRowNum} and #{endRowNum}
			</if> 
			ORDER BY SERVICENO DESC
	</select>
	
	<select id="svServiceTotalRows" parameterType="hashMap" resultType="int">
		SELECT 
			COUNT(*) 
		FROM sv300010 A
		WHERE A.ISDELETE = 0
		AND A.SITEID = #{siteid}
			<if test="strDate != null">
				AND A.RECEPTIONDATE <![CDATA[>=]]> #{strDate}
			</if>
			<if test="endDate != null">
				AND A.RECEPTIONDATE <![CDATA[<=]]> #{endDate}
			</if>
			<if test="custno != null">
				AND A.CUSTNO = #{custno}
			</if>
			<if test="servicename != null">
				AND A.SERVICENAME LIKE CONCAT('%' , #{servicename} , '%')
			</if>
			<if test="servicetype != null">
				AND A.SERVICETYPE = #{servicetype}
			</if>
			<if test="clino != null">
				AND A.CLINO = #{clino}
			</if>
			<if test="servicechannel != null">
				AND A.SERVICECHANNEL = #{servicechannel}
			</if>
			<if test="serviceowner != null">
				AND A.SERVICEOWNER = #{serviceowner}
			</if>
			<if test="owner != null">
				AND A.OWNER = #{owner}
			</if>
			<if test="servicestep != null">
				AND A.SERVICESTEP = #{servicestep}
			</if>
	</select>
	
	<select id="serviceRead" parameterType="hashMap" resultType="hashMap">
		SELECT
			A.SERVICENO 
		 	, A.SERVICENAME 
		 	, A.SERVICEDESC
		 	, FN_GETCODE('SERVICECODE1',A.SERVICECODE1,#{siteid}) AS SERVICECODE1
		 	, FN_GETCODEUPPER('SERVICECODE2',A.SERVICECODE2,#{siteid},FN_GETCODENO('SERVICECODE1',A.SERVICECODE1,#{siteid})) AS SERVICECODE2
		 	, A.SERVICETYPE
		 	, A.SERVICEOWNER
		 	, A.SERVICESTEP
		 	, A.FILESEARCHKEY
		 	, A.OWNER
		 	,(case when length(A.SERVICECODE2) > 0 then CONCAT(FN_GETCODE('SERVICECODE1',A.SERVICECODE1,#{siteid}), ' / ', FN_GETCODEUPPER('SERVICECODE2',A.SERVICECODE2,#{siteid},FN_GETCODENO('SERVICECODE1',A.SERVICECODE1,#{siteid})))
	         	   when length(A.SERVICECODE1) > 0 then FN_GETCODE('SERVICECODE1',A.SERVICECODE1,#{siteid})
	    		else '' end) SERVICECODE
			, FN_GETCODE('SERVICETYPE',A.SERVICETYPE,1) AS SERVICETYPE_
			, DATE_FORMAT(RECEPTIONDATE,'%Y-%m-%d') AS RECEPTIONDATE_
			, (SELECT USERNAME FROM me800010 WHERE USERNO = A.SERVICEOWNER) AS SERVICEOWNER_
			, (SELECT USERNAME FROM me800010 WHERE USERNO = A.OWNER) AS OWNER_
			, FN_GETCODE('SERVICESTEP',A.SERVICESTEP,1) AS SERVICESTEP_
			, B.CUSTNAME, B.EMAIL, B.DUTY
			, CONCAT(B.HOMADDR1,' ', B.HOMADDR2, ' ', B.HOMADDR3) AS CUSTADDRESS
			,B.HOMADDR1,B.HOMADDR2,B.HOMADDR3
			, CONCAT(B.MOBILE1 , '-' , B.MOBILE2 , '-' , B.MOBILE3) AS MOBILE
			, C.BSNO, C.CORP_SN AS INCNO
			, CONCAT(C.MOBILE1 , '-' , C.MOBILE2 , '-' , C.MOBILE3) AS CLIMOBILE
			, C.PRSDNAME, C.HOMEPAGE, C.CLINO, C.CLINAME
		FROM sv300010 A
		LEFT OUTER JOIN cu100010 B ON B.CUSTNO = A.CUSTNO
		LEFT OUTER JOIN sa200010 C ON C.CLINO = A.CLINO
		WHERE A.SITEID = #{siteid}
		AND A.SERVICENO = #{serviceno}
	</select>
	
	<select id="rewardRead" parameterType="hashMap" resultType="hashMap">
		SELECT
		A.REWARDNO
		,DATE_FORMAT(A.VISITDATE,'%Y-%m-%d') AS VISITDATE_
		,A.VISITTIME
		,CONCAT(A.VISITADDR1,' ',A.VISITADDR2,' ',A.VISITADDR3) AS VISITADDR_
		,A.VISITADDR1, A.VISITADDR2, A.VISITADDR3
		,(SELECT CODENAME FROM sys990020 WHERE CODEGRP = 'REWARDTYPE' AND SITEID = #{siteid} AND CODEVAL = A.REWARDTYPE) AS REWARDTYPE_
		,(SELECT CODENAME FROM sys990020 WHERE CODEGRP = 'CAUSECODE' AND SITEID = #{siteid} AND CODEVAL = A.CAUSECODE) AS CAUSECODE_
		,(SELECT CODENAME FROM sys990020 WHERE CODEGRP = 'DELAYTYPE' AND SITEID = #{siteid} AND CODEVAL = A.DELAYTYPE) AS DELAYTYPE_
		,A.REWARDDESC
		,A.DELAYDESC
		,A.FILESEARCHKEY
		,A.OWNER
		,(SELECT USERNAME FROM me800010 WHERE A.OWNER = USERNO) AS OWNER_
		FROM sv300030 A
		WHERE A.SITEID = #{siteid}
		AND A.SERVICENO = #{serviceno}
	</select>
	
	<select id="ractRead" parameterType="hashMap" resultType="hashMap">
		SELECT 
		DATE_FORMAT(A.RACTDATE,'%Y-%m-%d') AS RACTDATE_
		, (SELECT CODENAME FROM sys990020 WHERE CODEGRP = 'SENDYN' AND SITEID = #{siteid} AND CODEVAL = A.SENDYN) AS SENDYN_
		, A.RACTDESC
		, A.FILESEARCHKEY
		FROM sv300040 A 
		WHERE A.RACTNO IN (SELECT MAX(RACTNO) AS RACTNO 
						FROM sv300040 GROUP BY SERVICENO )
		AND A.SERVICENO = #{serviceno}
		AND A.SITEID = #{siteid}
	</select>
	
	<insert id="svInsert" parameterType="serviceDto">
		
		INSERT INTO sv300010
		(
		SERVICENAME
		,SERVICEDESC
		,SERVICEOWNER
		,RECEPTIONDATE
		,CUSTNO
		,CLINO
		,SERVICESTEP
		,OWNER
		,SITEID
		,FILESEARCHKEY
		,REGDATE
		,REGUSER
		,EDTDATE
		,EDTUSER
		,SERVICETYPE
		,SERVICECODE1
		,SERVICECODE2
		,SERVICECHANNEL
		,ISDELETE
		,MEMO
		,COMPLETE
		)VALUES(
		#{servicename}
		,#{servicedesc}
		,#{serviceowner}
		,#{receptiondate}
		,#{custno}
		,#{clino}
		,#{servicestep}
		,#{owner}
		,#{siteid}
		,#{filesearchkey}
		,NOW()
		,#{reguser}
		,NOW()
		,#{edtuser}
		,#{servicetype}
		,#{servicecode1}
		,#{servicecode2}
		,#{servicechannel}
		,#{isdelete}
		,#{memo}
		,#{complete}
		)
		<selectKey keyProperty="serviceno"  resultType="integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="svUpdate" parameterType="serviceDto">
		UPDATE sv300010
			SET SERVICENAME = #{servicename}
			,SERVICEDESC = #{servicedesc}
			,SERVICEOWNER = #{serviceowner}
			,RECEPTIONDATE = #{receptiondate}
			,CUSTNO = #{custno}
			,CLINO = #{clino}
			,OWNER = #{owner}
			,FILESEARCHKEY = #{filesearchkey}
			,EDTDATE = NOW()
			,EDTUSER = #{edtuser}
			,SERVICETYPE = #{servicetype}
			,SERVICECODE1 = #{servicecode1}
			,SERVICECODE2 = #{servicecode2}
			,SERVICECHANNEL = #{servicechannel}
		WHERE SERVICENO = #{serviceno}
		AND SITEID = #{siteid}
	</update>
	
	<update id ="svDelete" parameterType="serviceDto">
		UPDATE sv300010
			SET EDTDATE = NOW()
				,EDTUSER = #{edtuser}
				,ISDELETE = 1
			WHERE SITEID = #{siteid}
			AND SERVICENO = #{serviceno}
	</update>
	
	<update id="svStep" parameterType="int">
		UPDATE sv300010
			SET SERVICESTEP = #{servicestep}
		WHERE SERVICENO = #{serviceno}
		AND SITEID = #{siteid}
	</update>
	
	<insert id="rewardInsert" parameterType="rewardDto">
		INSERT INTO sv300030
		(
		VISITDATE
		,VISITTIME
		,REWARDTYPE
		,CAUSECODE
		,DELAYTYPE
		,DELAYDESC
		,REWARDDESC
		,FILESEARCHKEY
		,REGDATE
		,REGUSER
		,EDTDATE
		,EDTUSER
		,SITEID
		,SERVICENO
		,VISITADDR1
		,VISITADDR2
		,VISITADDR3
		,OWNER
		)VALUES(
		#{visitdate}
		,#{visittime}
		,#{rewardtype}
		,#{causecode}
		,#{delaytype}
		,#{delaydesc}
		,#{rewarddesc}
		,#{filesearchkey}
		,NOW()
		,#{reguser}
		,NOW()
		,#{edtuser}
		,#{siteid}
		,#{serviceno}
		,#{visitaddr1}
		,#{visitaddr2}
		,#{visitaddr3}
		,#{owner}
		)
	</insert>
	
	<update id="rewardUpdate" parameterType="rewardDto">
	Update sv300030
		SET VISITDATE = #{visitdate}
			,VISITTIME = #{visittime}
			,REWARDTYPE = #{rewardtype}
			,CAUSECODE = #{causecode}
			,DELAYTYPE = #{delaytype}
			,DELAYDESC = #{delaydesc}
			,REWARDDESC = #{rewarddesc}
			,FILESEARCHKEY = #{filesearchkey}
			,EDTDATE = NOW()
			,EDTUSER = #{edtuser}
		WHERE SITEID = #{siteid}
		AND SERVICENO = #{serviceno}
		AND REWARDNO = #{rewardno}
	</update>
	
	<insert id="ractInsert" parameterType="ractDto">
		INSERT INTO sv300040
		(
		SERVICENO
		,RACTDATE
		,SENDYN
		,RACTDESC
		,FILESEARCHKEY
		,SITEID
		,REGDATE
		,REGUSER
		,EDTDATE
		,EDTUSER
		,RACTCODE
		)VALUES(
		#{serviceno}
		,#{ractdate}
		,#{sendyn}
		,#{ractdesc}
		,#{filesearchkey}
		,#{siteid}
		,NOW()
		,#{reguser}
		,NOW()
		,#{edtuser}
		,#{ractcode}
		)
	</insert>
	
	<update id="ractUpdate" parameterType="ractDto">
		UPDATE sv300040
			SET RACTDATE = #{ractdate}
				,SENDYN = #{sendyn}
				,RACTDESC = #{ractdes}
				,FILESEARCHKEY = #{filesearchkey}
				,EDTDATE = NOW()
				,EDTUSER = #{edtuser}
				,RACTCODE = #{ractcode}
		WHERE SITEID = #{siteid}
		AND SERVICENO = #{serviceno}
		AND RACTNO = #{ractno}
	</update>
	
	<select id="tabRact" parameterType="ractDto" resultType="HashMap">
		SELECT
		DATE_FORMAT(A.RACTDATE,'%Y-%m-%d') AS RACTDATE_
		, (SELECT USERNAME FROM me800010 WHERE USERNO = (SELECT OWNER FROM sv300010 WHERE SERVICENO = A.SERVICENO)) AS OWNER_
		, CASE WHEN A.RACTCODE = 1 THEN 'option1'
    		   WHEN A.RACTCODE = 2 THEN 'option2'
    		   WHEN A.RACTCODE = 3 THEN 'option3' END AS RACTCODE_
    	, CASE WHEN A.SENDYN = 0 THEN '미발송'
    		   WHEN A.SENDYN = 1 THEN '발송' END AS SENDYN_
    	,A.RACTDESC
    	FROM sv300040 A
    	WHERE A.SITEID = #{siteid}
    	AND A.SERVICENO = #{serviceno}
    	ORDER BY A.RACTNO DESC
    	LIMIT 5
	</select>
	
	<insert id="conveyInsert" parameterType="conveyDto">
		INSERT INTO sv300050
			(SERVICENO
			,PREVOWNER
			,NEXTOWNER
			,CONVEYREASON
			,CONVEYDATE
			,CONVEYDESC
			,REGDATE
			,REGUSER
			,EDTDATE
			,EDTUSER
			,SITEID
			)VALUES(
			#{serviceno}
			,#{prevowner}
			,#{nextowner}
			,#{conveyreason}
			,#{conveydate}
			,#{conveydesc}
			,NOW()
			,#{reguser}
			,NOW()
			,#{edtuser}
			,#{siteid}
			);
			
			UPDATE sv300010
			SET OWNER = #{nextowner}
				,EDTDATE = NOW()
				,EDTUSER = #{edtuser}
			WHERE SERVICENO = #{serviceno}
			AND SITEID = #{siteid};
			
			UPDATE sv300010
			SET SERVICESTEP = 5
			WHERE SERVICENO = #{serviceno}
			AND SITEID = #{siteid};
	</insert>
	
	<select id="tabConvey" parameterType="int" resultType="HashMap">
		SELECT A.CONVEYNO
			,A.SERVICENO
			,A.PREVOWNER
			,(SELECT USERNAME FROM me800010 WHERE A.PREVOWNER = USERNO) AS PREVOWNER_
			,A.NEXTOWNER
			,(SELECT USERNAME FROM me800010 WHERE A.NEXTOWNER = USERNO) AS NEXTOWNER_
			,IFNULL((SELECT CODENAME FROM sys990020 WHERE CODEGRP = 'CONVEYREASON' AND SITEID = #{siteid} AND CODEVAL = A.CONVEYREASON),'') AS CONVEYREASON_
			,DATE_FORMAT(A.CONVEYDATE,'%Y-%m-%d') AS CONVEYDATE
			,A.CONVEYDESC
		FROM sv300050 A
		WHERE A.SERVICENO = #{serviceno}
		AND A.SITEID = #{siteid}
	</select>
	
	<select id="calList" parameterType="rewardDto" resultType="hashMap">
		SELECT
			A.SERVICENO AS id
			, CASE WHEN A.SERVICESTEP = 2 THEN CONCAT('[현상파악]', A.SERVICENAME)
		  		   WHEN A.SERVICESTEP = 3 THEN CONCAT('[처리]' , A.SERVICENAME)
		  		   WHEN A.SERVICESTEP = 5 THEN CONCAT('[이관]' , A.SERVICENAME)
  		  		   WHEN A.SERVICESTEP = 6 THEN CONCAT('[상급자이관]' , A.SERVICENAME)
		  		   WHEN A.SERVICESTEP = 9 THEN CONCAT('[종료]' , A.SERVICENAME) END AS title
			, CASE WHEN A.SERVICESTEP = 2 THEN DATE_FORMAT(B.VISITDATE,'%Y-%m-%d')
	  	   	   WHEN A.SERVICESTEP = 3 THEN DATE_FORMAT(C.RACTDATE,'%Y-%m-%d')
		  		   WHEN A.SERVICESTEP = 5 THEN DATE_FORMAT(D.CONVEYDATE,'%Y-%m-%d')
		  		   WHEN A.SERVICESTEP = 6 THEN DATE_FORMAT(D.CONVEYDATE,'%Y-%m-%d')
	  	   	   WHEN A.SERVICESTEP = 9 THEN DATE_FORMAT(A.EDTDATE,'%Y-%m-%d') END  'start'
			, CASE WHEN A.SERVICESTEP = 2 THEN DATE_FORMAT(B.VISITDATE,'%Y-%m-%d')
	  	   	   WHEN A.SERVICESTEP = 3 THEN DATE_FORMAT(C.RACTDATE,'%Y-%m-%d')
		  		   WHEN A.SERVICESTEP = 5 THEN DATE_FORMAT(D.CONVEYDATE,'%Y-%m-%d')
		  		   WHEN A.SERVICESTEP = 6 THEN DATE_FORMAT(D.CONVEYDATE,'%Y-%m-%d')
	  	   	   WHEN A.SERVICESTEP = 9 THEN DATE_FORMAT(A.EDTDATE,'%Y-%m-%d') END  'end'
	  	   	   
			, CASE WHEN A.SERVICESTEP = 2 THEN '#FF33CC'
		 		   WHEN A.SERVICESTEP = 3 THEN '#CC33FF'
	 	   	   WHEN A.SERVICESTEP = 5 THEN '#9933FF'
	 	   	   WHEN A.SERVICESTEP = 6 THEN '#9933FF'
	 	   	   WHEN A.SERVICESTEP = 9 THEN '#333333' END AS color
			, CASE WHEN A.SERVICESTEP = 2 THEN B.REWARDDESC
		 		   WHEN A.SERVICESTEP = 3 THEN C.RACTDESC
		 		   WHEN A.SERVICESTEP = 5 THEN D.CONVEYDESC
		 		   WHEN A.SERVICESTEP = 6 THEN D.CONVEYDESC
		 		   WHEN A.SERVICESTEP = 9 THEN A.SERVICEDESC END AS 'desc'
			,(SELECT USERNAME FROM me800010 WHERE USERNO = A.SERVICEOWNER) AS SERVICEOWNER_
			,(SELECT USERNAME FROM me800010 WHERE USERNO = A.OWNER) AS OWNER_
		FROM sv300010 A
		LEFT OUTER JOIN sv300030 B ON B.SERVICENO = A.SERVICENO
		LEFT OUTER JOIN (SELECT * FROM sv300040 WHERE RACTNO IN (SELECT max(ractno) AS ractno FROM sv300040 group by serviceno )) C ON C.SERVICENO = A.SERVICENO
		LEFT OUTER JOIN (SELECT * FROM sv300050 WHERE CONVEYNO IN (SELECT max(conveyno) AS conveyno FROM sv300050 group by serviceno )) D ON D.SERVICENO = A.SERVICENO
		WHERE A.SITEID = #{siteid}
		AND A.SERVICESTEP NOT IN (1,4)
		AND A.ISDELETE = 0
	</select>
	
	<insert id="svProductInsert" parameterType="hashMap">
		INSERT INTO sv300060
		(
		SERVICENO
		 ,PRODUCTB
		 ,PRODUCTM
		 ,PRODUCTS
		 ,REGDATE
		 ,REGUSER
		 ,EDTDATE
		 ,EDTUSER
		 ,SITEID
		)VALUES(
		#{serviceno}
		,#{productb}
		,#{productm}
		,#{products}
		,NOW()
		,#{reguser}
		,NOW()
		,#{edtuser}
		,#{siteid}
		)
	</insert>
	
	<insert id="svReservInsert" parameterType="hashMap">
		INSERT INTO sv300070
		(
		SERVICENO
		,MOBILENO
		,RESERVDATE
		,RESERVTIMETO
		,RESERVTIMEFROM
		,COMPLETE
		,REGDATE
		,REGUSER
		,EDTDATE
		,EDTUSER
		,SITEID
		)VALUES(
		#{serviceno}
		,#{reservphone}
		,#{reservdate}
		,#{reservtimeto}
		,#{reservtimefrom}
		,#{complete}
		,NOW()
		,#{reguser}
		,NOW()
		,#{edtuser}
		,#{siteid}
		)
	</insert>
	<!-- voc tab 이메일리스트 카운트-->
	<select id="emailListCnt" parameterType="hashMap" resultType="int">
	SELECT COUNT(*)
	FROM SYS980010
	WHERE 
		SITEID = #{siteid}
		AND RESERV = 0
		<if test="custno != null and custno != 0">
		AND CUSTNO = #{custno}
		</if>
	</select>
	<!-- voc tab 이메일리스트 -->
	<select id="emailList" parameterType="hashMap" resultType="hashMap">
	SELECT * 
	FROM (
			SELECT 
			A.EMAILLOGID, A.CUSTNO,A.CSTNAME, A.USERNAME, A.FROMEMAIL,A.TOEMAIL, A.SUBJECT
			,A.FILESEARCHKEY, A.EMAILTYPE
			,DATE_FORMAT(A.RLTDATE,'%Y-%m-%d') AS RLTDATE_ 
			,CASE WHEN IFNULL(A.CAMPNO,0) != 0 
			THEN '캠페인'
			ELSE ''
			END AS MEDIATYPE
			, @RNUM:=@RNUM + 1 AS ROWNUM
			,CASE WHEN CHAR_LENGTH(A.SUBJECT) <![CDATA[>=]]> 15 THEN CONCAT( SUBSTRING(A.SUBJECT,1,12) ,'...' )  
			ELSE IFNULL(A.SUBJECT,'')
			END AS SUBJECT_
			
			FROM SYS980010 A
			LEFT OUTER JOIN CP400010 B ON A.CAMPNO = B.CAMPNO
			,(SELECT @RNUM := 0) R
			WHERE 
				A.SITEID = #{siteid}
				AND A.RESERV = 0
				<if test="custno != null and custno != 0">
				AND A.CUSTNO = #{custno}
				</if>
		) X
	<if test="endRowNum != null">
	WHERE X.ROWNUM Between #{startRowNum} and #{endRowNum}
	</if> 
	ORDER BY RLTDATE_ DESC 
	</select>
	
	<!-- VOC EMAIL 상세 -->
	<select id="vocEmailDetail" parameterType="hashMap" resultType="hashMap">		
	SELECT 
	A.EMAILLOGID, A.CUSTNO,A.CSTNAME, A.USERNAME, A.FROMEMAIL, A.TOEMAIL, A.SUBJECT
	,A.CONTENT
	,A.FILESEARCHKEY
	,DATE_FORMAT(A.RLTDATE,'%Y-%m-%d') AS RLTDATE_
	,A.EMAILTYPE
	,CASE WHEN IFNULL(A.CAMPNO,0) != 0 
		THEN CONCAT('[캠페인]',B.CAMPNAME)
		ELSE '[기타]'
		END AS MEDIATYPE
			
	FROM SYS980010 A
	LEFT OUTER JOIN CP400010 B ON A.CAMPNO = B.CAMPNO
	
	WHERE 
		A.SITEID = #{siteid}
		AND A.EMAILLOGID = #{emaillogid}		
	</select>
	
	<!-- voc 블랙추가  -->
	<insert id="vocBlackCustInsert" parameterType="hashMap">		
		INSERT INTO cu120010
		(		
			CUSTNO
			,BLACKTYPE
			,RECEIVENO
			,MEMO
			,REGDATE
			,REGUSER
			,ISDELETE
			,SITEID
		)
		VALUES
		(	
			#{custno}
			,#{blacktype}
			,#{receiveno}
			,#{memo}
			,NOW()
			,#{userno}
			,0
			,#{siteid}
		)
		<selectKey keyProperty="bcustno"  resultType="integer" order="AFTER">
		SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<!-- 블랙삭제 -->
	<update id="vocBlackCustDelete" parameterType="hashMap">
		UPDATE CU120010 
		SET
		EDTUSER = #{userno}
		,EDTDATE = NOW()
		,ISDELETE = 1
		WHERE
			CUSTNO = #{custno}
			AND SITEID = #{siteid}
			AND ISDELETE = 0
	</update>
	<!-- 최근 한건의 상담 접수 -->
	<select id="topList" parameterType="hashMap" resultType="hashMap">
		SELECT * FROM sv300010
		WHERE SITEID = #{siteid}
		AND CUSTNO = #{custno}
		order by SERVICENO DESC
		LIMIT 1
	</select>
	<!-- 최근 한건의 상담예약 -->
	<select id="topReserv" parameterType="hashMap" resultType="hashMap">
		SELECT * FROM sv300070
		WHERE SITEID = #{siteid}
		and SERVICENO = #{serviceno}
		ORDER BY NO DESC
		LIMIT 1
	</select>
	
	<!--  최근 한건의 이관 -->
	<select id="topConvey" parameterType="hashMap" resultType="hashMap">
		SELECT A.*,(SELECT USERNAME FROM me800010 WHERE USERNO = A.NEXTOWNER ) AS NEXTOWNER_ FROM sv300050 A
		WHERE A.SITEID = #{siteid}
		AND A.SERVICENO = #{serviceno}
		ORDER BY A.CONVEYNO DESC
		LIMIT 1
	</select>
	
	<!--  최근 한건의 현상파악 -->
	<select id="topReward" parameterType="hashMap" resultType="hashMap">
		SELECT DATE_FORMAT(A.VISITDATE,'%Y-%m-%d') AS VISITDATE,A.VISITADDR1,A.VISITADDR2,A.VISITADDR3,A.OWNER
				,(SELECT USERNAME FROM me800010 WHERE USERNO = A.OWNER) AS OWNER_ FROM sv300030 A
		WHERE A.SITEID = #{siteid}
		AND A.SERVICENO = #{serviceno}
		ORDER BY A.REWARDNO DESC
		LIMIT 1
	</select>
	
	<!-- 접수 타입이 A/S이면서 현상파악 단계가 접수 상태인 서비스 접수 건 -->
	<select id="calRewardOwner" parameterType="rewardDto" resultType="hashMap">
	SELECT id,CONCAT(USERNAME,'-',CNT,'건') AS title ,start,end,REWARDDESC from(
		SELECT 
			A.OWNER as id
			, (SELECT USERNAME FROM me800010 WHERE USERNO = A.OWNER) AS USERNAME
			, C.CNT
			,DATE_FORMAT(A.VISITDATE,'%Y-%m-%d') AS 'start'
			,DATE_FORMAT(A.VISITDATE,'%Y-%m-%d') AS 'end'
			,A.REWARDDESC AS rewarddesc
			FROM sv300030 A 
			LEFT OUTER JOIN sv300010 B ON B.SERVICENO = A.SERVICENO
			INNER JOIN (SELECT SERVICENO,COUNT(*) AS CNT FROM sv300030 GROUP BY VISITDATE) C ON C.SERVICENO = A.SERVICENO
			WHERE A.SITEID = 1
			AND B.SERVICESTEP = 2
			AND B.SERVICETYPE = 2
			<if test="owner != 0">
			AND A.OWNER = #{owner}
			</if>
		) X
	</select>
	
	<select id="calRewardOwnerList" parameterType="hashMap" resultType="hashMap">
		SELECT A.OWNER
		, (SELECT USERNAME FROM me800010 WHERE USERNO = A.OWNER) AS USERNAME
		, DATE_FORMAT(A.VISITDATE,'%Y-%m-%d') AS VISITDATE_
		, C.CUSTNAME
		, CONCAT(A.VISITADDR1,A.VISITADDR2,A.VISITADDR3) AS ADDR_
		, FN_GETCODE('SERVICESTEP',B.SERVICESTEP,#{siteid}) AS SERVICESTEP_
		, CONCAT(C.MOBILE1,C.MOBILE2,C.MOBILE3) AS MOBILE_
		FROM SV300030 A 
		LEFT OUTER JOIN SV300010 B ON B.SERVICENO = A.SERVICENO
		INNER JOIN CU100010 C ON C.CUSTNO = B.CUSTNO
		WHERE A.SITEID = #{siteid}
		AND A.OWNER = #{owner}
		AND DATE_FORMAT(A.VISITDATE,'%Y-%m-%d') = #{visitdate}
	</select>

	<select id="svProductRead" parameterType="hashMap" resultType="hashMap">
		SELECT PRODUCTB,PRODUCTM,PRODUCTS
		,FN_PRODUCT(PRODUCTB,#{siteid}) AS PRODUCTBNAME
		,FN_PRODUCT(PRODUCTM,#{siteid}) AS PRODUCTMNAME
		,FN_PRODUCT(PRODUCTS,#{siteid}) AS PRODUCTSNAME
		,(SELECT COUNT(*) FROM sv300060 where siteid = #{siteid} and serviceno = #{serviceno}) AS CNT
		 FROM SV300060
		WHERE SITEID = #{siteid}
		AND SERVICENO = #{serviceno}
	</select>
	
	
	
	<!-- 콜백 히스토리 카운터 (고객) -->
	<select id="vocCallBackHistListCnt" parameterType="hashMap" resultType="int">
	SELECT COUNT(*)
	FROM CTI510020
	WHERE 
		CUSTNO = #{custno}
		AND SITEID = #{siteid}
	ORDER BY REGDATE DESC
	</select>
	
	<!-- 콜백 히스토리 리스트 (고객) -->
	<select id="vocCallBackHistList" parameterType="hashMap" resultType="hashMap">
	SELECT *
	FROM (
		SELECT
		@RNUM:=@RNUM + 1 AS ROWNUM
		,A.CALLBACKHISTNO, A.CALLBACKNO, B.CALLER, B.CALLBACK
		,B.GCODE1, B.GCODE2, B.GCODE3
		,DATE_FORMAT(B.RECEIVEDATE,'%Y-%m-%d %H:%i:%s') AS RECEIVEDATE_
		,DATE_FORMAT(A.REGDATE,'%Y-%m-%d %H:%i:%s') AS REGDATE_  
		,A.CALLSTATUS
		,(CASE 
			WHEN A.CALLSTATUS = 0 THEN '접수'
			WHEN A.CALLSTATUS = 1 THEN '할당'
			WHEN A.CALLSTATUS = 2 THEN '완료'
			WHEN A.CALLSTATUS = 3 THEN '통화불가' 
			WHEN A.CALLSTATUS = 4 THEN '미해결'
			ELSE ''
			END) AS CALLSTATUS_		
		,C.USERNAME		
		,IFNULL(A.MEMO,'') AS MEMO
		,CASE WHEN CHAR_LENGTH(A.MEMO) <![CDATA[>=]]> 15 THEN CONCAT( SUBSTRING(A.MEMO,1,12) ,'...' )  
			ELSE IFNULL(A.MEMO,'')
			END AS MEMO_
		
		FROM CTI510020 A
		LEFT OUTER JOIN CTI510010 B ON A.CALLBACKNO = B.CALLBACKNO
		LEFT OUTER JOIN ME800010 C ON A.REGUSER = C.USERNO
		,(SELECT @RNUM := 0) R
	
		WHERE  
			A.CUSTNO = #{custno}
			AND A.SITEID = #{siteid}
		ORDER BY A.REGDATE DESC
		) X
	<if test="endRowNum != null">
	WHERE X.ROWNUM Between #{startRowNum} and #{endRowNum}
	</if> 
	</select>
	
	<!-- 고객 블랙등록 내역 카운터 -->
	<select id="vocBlackHistListCnt" parameterType="hashMap" resultType="int">
	SELECT COUNT(*)
	FROM CU120010
	WHERE 
		CUSTNO = #{custno}
		AND SITEID = #{siteid}
	</select>
	
	<!-- 고객 블랙등록 내역  -->
	<select id="vocBlackHistList" parameterType="hashMap" resultType="hashMap">	
	SELECT *
	FROM (
		SELECT
		@RNUM:=@RNUM + 1 AS ROWNUM
		,A.BCUSTNO,A.CUSTNO,A.BLACKTYPE
		,CASE WHEN A.BLACKTYPE = 1 THEN '욕설'
			WHEN A.BLACKTYPE = 2 THEN '성희롱'
			WHEN A.BLACKTYPE = 3 THEN '기타'
			ELSE '' 
			END AS BLACKTYPE_
		,A.RECEIVENO
		,IFNULL(A.MEMO,'') AS MEMO
		,DATE_FORMAT(A.REGDATE,'%Y-%m-%d %H:%m:%i') AS REGDATE_
		,CASE WHEN IFNULL(A.ISDELETE = 1,0) THEN CONCAT(DATE_FORMAT(A.EDTDATE,'%Y-%m-%d'),' / ','해제') 
			ELSE '블랙'
			END AS ISDELETE_
		,B.USERNAME
		,CASE WHEN CHAR_LENGTH(A.MEMO) <![CDATA[>=]]> 20 THEN CONCAT( SUBSTRING(A.MEMO,1,17) ,'...' )  
			ELSE IFNULL(A.MEMO,'')
			END AS MEMO_
		FROM CU120010 A  
		LEFT OUTER JOIN ME800010 B ON A.REGUSER = B.USERNO   
		,(SELECT @RNUM := 0) R
	
		WHERE 
			A.CUSTNO = #{custno}
			AND A.SITEID = #{siteid}
		ORDER BY A.REGDATE DESC 
		) X
	<if test="endRowNum != null">
	WHERE X.ROWNUM Between #{startRowNum} and #{endRowNum}
	</if> 
	</select>
	
</mapper>